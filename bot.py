import os
import telebot
import gspread
from dotenv import load_dotenv
from google.oauth2.service_account import Credentials
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
SPREADSHEET_URL = os.getenv("SPREADSHEET_URL")
creds_json = os.getenv("GOOGLE_APPLICATION_CREDENTIALS_JSON")

bot = telebot.TeleBot(BOT_TOKEN)

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google Sheets
creds = Credentials.from_service_account_info(eval(creds_json), scopes=[
    "https://www.googleapis.com/auth/spreadsheets.readonly"
])
gs = gspread.authorize(creds)
sheet = gs.open_by_url(SPREADSHEET_URL).sheet1  # –ª–∏—Å—Ç —Å —Ä–æ–∑–∞–º–∏

def get_roses():
    return sheet.get_all_records()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "üåπ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–∑—ã –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /all –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö.")

# –ö–æ–º–∞–Ω–¥–∞ /all
@bot.message_handler(commands=['all'])
def show_all_roses(message):
    roses = get_roses()
    for rose in roses:
        send_rose_card(message.chat.id, rose)

# –ü–æ–∏—Å–∫ —Ä–æ–∑—ã
@bot.message_handler(func=lambda m: True)
def search_rose(message):
    query = message.text.strip().lower()
    roses = get_roses()
    rose = next((r for r in roses if r['–ù–∞–∑–≤–∞–Ω–∏–µ'].lower().startswith(query)), None)

    if rose:
        send_rose_card(message.chat.id, rose)
    else:
        bot.send_message(message.chat.id, "‚ùå –†–æ–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏
def send_rose_card(chat_id, rose):
    caption = f"üåπ <b>{rose['–ù–∞–∑–≤–∞–Ω–∏–µ']}</b>\n\n{rose['price']}"
    photo_url = rose['photo']
    short_id = rose['–ù–∞–∑–≤–∞–Ω–∏–µ'][:30]  # –±–µ–∑–æ–ø–∞—Å–Ω—ã–π ID –¥–ª—è callback_data

    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("ü™¥ –£—Ö–æ–¥", callback_data=f"care|{short_id}"),
        InlineKeyboardButton("üìú –ò—Å—Ç–æ—Ä–∏—è", callback_data=f"history|{short_id}")
    )

    bot.send_photo(chat_id, photo_url, caption=caption, parse_mode='HTML', reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    roses = get_roses()
    action, short_id = call.data.split('|', 1)
    rose = next((r for r in roses if r['–ù–∞–∑–≤–∞–Ω–∏–µ'].startswith(short_id)), None)

    if not rose:
        bot.answer_callback_query(call.id, "–†–æ–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    if action == "care":
        text = rose.get('–£—Ö–æ–¥', '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏')
        bot.send_message(call.message.chat.id, f"ü™¥ –£—Ö–æ–¥:\n{text}")
    elif action == "history":
        text = rose.get('–ò—Å—Ç–æ—Ä–∏—è', '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏')
        bot.send_message(call.message.chat.id, f"üìú –ò—Å—Ç–æ—Ä–∏—è:\n{text}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
